plugins {
    id 'com.android.library'
    id 'kotlin-android'
}
android {
    compileSdk 31

    defaultConfig {
        minSdk 21
        targetSdk 31
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
}


dependencies {

    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'


    //networking
    api("com.squareup.retrofit2:retrofit:2.9.0")
    api("com.squareup.retrofit2:converter-gson:2.9.0")
    api("com.github.bumptech.glide:glide:4.12.0")
    api("com.github.bumptech.glide:compiler:4.12.0")

    //concurrency
    api("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2")
    api("org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2")


    // jetpack lifecycles
    def lifecycle_version = "2.3.1"
    api("androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version")    // ViewModel
    api("androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version")     // LiveData
    api("androidx.lifecycle:lifecycle-common-java8:$lifecycle_version")     // if using Java8, use the following instead of lifecycle-compiler

    //testing
    testImplementation("org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.2")
    testImplementation("androidx.arch.core:core-testing:2.1.0")
    testImplementation("io.mockk:mockk:1.12.0")
    testImplementation("io.mockk:mockk-agent-jvm:1.12.0")
    testImplementation("junit:junit:4.13.2")
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

ext {
    PUBLISH_ARTIFACT_ID = 'dog_network'
}
apply from: "${project.rootDir}/gradle_scripts/all_module_scripts.gradle"